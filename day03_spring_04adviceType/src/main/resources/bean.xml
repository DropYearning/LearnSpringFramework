<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的IoC，把service对象配置进来-->
    <bean id="accountService" class="com.study.service.impl.AccountServiceImpl"></bean>


    <!--配置Spring IoC管理Logger-->
    <bean id="logger" class="com.study.utils.Logger"></bean>
    <!--开始配置AOP-->
    <aop:config>
        <!--被各个aspect引用的pointcut必须放在所有的aspect之前-->
        <aop:pointcut id="accountServiceImplPt" expression="execution(* com.study.service.impl.*.*(..))"/>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
<!--            &lt;!&ndash;配置前置通知&ndash;&gt;-->
<!--            <aop:before method="beforePrintLog" pointcut="execution(* com.study.service.impl.*.*(..))"></aop:before>-->
<!--            &lt;!&ndash;配置后置通知&ndash;&gt;-->
<!--            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="accountServiceImplPt"></aop:after-returning>-->
<!--            &lt;!&ndash;配置异常通知&ndash;&gt;-->
<!--            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="accountServiceImplPt" ></aop:after-throwing>-->
<!--            &lt;!&ndash;配置最终通知&ndash;&gt;-->
<!--            <aop:after method="afterAllPrintLog" pointcut-ref="accountServiceImplPt"></aop:after>-->
        <!--配置环绕通知-->
        <aop:around method="aroundPrintLog" pointcut-ref="accountServiceImplPt"></aop:around>


        </aop:aspect>
    </aop:config>

</beans>

