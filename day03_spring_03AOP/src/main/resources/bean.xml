<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的IoC，把service对象配置进来-->
    <bean id="accountService" class="com.study.service.impl.AccountServiceImpl"></bean>

    <!--Spring中基于XML的AOP配置步骤
            1 把通知的Bean(Logger)也交给Spring管理
            2 使用aop:config标签表明开始AOP的配置
            3 使用aop:aspect标签表明开始配置切面
                - id属性：给切面提供一个唯一标志
                - ref属性：指定通知类(Logger)bean的id
            4 在aop:aspect标签的内部使用对应的标签来配置通知的类型,例如<aop:before>
            5 pointcut属性：用于指定切入点表达式，该表达式的含义是指要对业务层中的哪些方法增强
    -->

    <!--配置Spring IoC管理Logger-->
    <bean id="logger" class="com.study.utils.Logger"></bean>
    <!--开始配置AOP-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置通知的类型并且建立通知方法和切入点方法的关联：printLog是前置通知-->
            <!--**实际开发中切入点表达式的通常写法**：切到业务层实现类下的所有方法-->
            <aop:before method="printLog" pointcut="execution(* com.study.service.impl.*.*(..))"></aop:before>
        </aop:aspect>

    </aop:config>

</beans>

